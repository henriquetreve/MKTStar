{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfBImktstar-dev"
		},
		"dlMktStar_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'dlMktStar'"
		},
		"srvdbMktStar_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'srvdbMktStar'"
		},
		"dlMktStar_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://samktstar.dfs.core.windows.net/"
		},
		"srvdbMktStar_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "srvbimktstarht.database.windows.net"
		},
		"srvdbMktStar_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dbBImktstars"
		},
		"srvdbMktStar_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pplExtAffiliates')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtAffiliates",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtAffiliates",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Sales": {},
									"AffiliateSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extration"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtAffiliates')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtCourses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtCourses",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtCourses",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CodProducts": {},
									"CoursesSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extration"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtCourses')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtMacroRegions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfMacroRegions",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtMacroRegions",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MacroRegions": {},
									"RegionsSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extration"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtMacroRegions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtPaymentType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtPaymentType",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtPaymentType",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Sales": {},
									"PaymentTypeSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extration"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtPaymentType')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtProducer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtProducer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtProducer",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Sales": {},
									"ProducerSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extration"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtProducer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtSales",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtSalesHotmart",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesHotmart": {},
									"SalesHotmartDestination": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extration"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtSalesHotmart')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplExtStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfExtStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfExtStatus",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Sales": {},
									"StatusSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "1 - Extration"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfExtStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplsrcAffiliates')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfsrcAffiliates",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfsrcAffiliates",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DLSilver": {},
									"srcDestination": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfsrcAffiliates')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsExtAffiliatesDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dlMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Affiliates.csv",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dlMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsExtCodCoursesOrigin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dlMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Cod-Produtos.csv",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Cod;Nome Novo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dlMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsExtCoursesDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dlMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Courses.csv",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Affiliate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dlMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsExtMacroRegionsDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dlMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Regions.csv",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Affiliate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dlMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsExtMacroRegionsOrigin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dlMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Planilha1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Macro Regioes.xlsx",
						"fileSystem": "bronze"
					}
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dlMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsExtPaymentTypeDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dlMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Paymenttype.csv",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Affiliate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dlMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsExtProducerDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dlMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Producer.csv",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dlMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsExtSalesHotmartDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dlMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Sales.csv",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Affiliate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dlMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsExtSalesHotmartOrigin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dlMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vendasHotmartsaida.csv",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Produto",
						"type": "String"
					},
					{
						"name": "Afiliado",
						"type": "String"
					},
					{
						"name": "Nome do Produtor",
						"type": "String"
					},
					{
						"name": "Documento do Produtor",
						"type": "String"
					},
					{
						"name": "Meio de Pagamento",
						"type": "String"
					},
					{
						"name": "Preço do Produto",
						"type": "String"
					},
					{
						"name": "Preço da Oferta",
						"type": "String"
					},
					{
						"name": "Tipo de Pagamento",
						"type": "String"
					},
					{
						"name": "Tipo pagamento oferta",
						"type": "String"
					},
					{
						"name": "Moeda",
						"type": "String"
					},
					{
						"name": "Número da Parcela",
						"type": "String"
					},
					{
						"name": "Recorrência",
						"type": "String"
					},
					{
						"name": "Data de Venda",
						"type": "String"
					},
					{
						"name": "Data de Confirmação",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "DDD",
						"type": "String"
					},
					{
						"name": "Cidade",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dlMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsExtStatusDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dlMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Extraction"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Status.csv",
						"fileSystem": "silver"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Affiliate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dlMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tblsrcAffiliates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "srvdbMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nome",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "src",
					"table": "Afiliados"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/srvdbMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tblsrcCourses')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "srvdbMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BK",
						"type": "varchar"
					},
					{
						"name": "Nome",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "src",
					"table": "Cursos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/srvdbMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tblsrcPaymentType')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "srvdbMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nome",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "src",
					"table": "TipoPagamento"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/srvdbMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tblsrcProducer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "srvdbMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nome",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "src",
					"table": "Produtor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/srvdbMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tblsrcRegions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "srvdbMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DDD",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Cidade",
						"type": "varchar"
					},
					{
						"name": "Estado",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "src",
					"table": "Regioes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/srvdbMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tblsrcStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "srvdbMktStar",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Nome",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "src",
					"table": "Status"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/srvdbMktStar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dlMktStar')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dlMktStar_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('dlMktStar_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/srvdbMktStar')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('srvdbMktStar_properties_typeProperties_server')]",
					"database": "[parameters('srvdbMktStar_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('srvdbMktStar_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('srvdbMktStar_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtAffiliates')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extration"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtSalesHotmartOrigin",
								"type": "DatasetReference"
							},
							"name": "Sales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtAffiliatesDestination",
								"type": "DatasetReference"
							},
							"name": "AffiliateSilver"
						}
					],
					"transformations": [
						{
							"name": "SelectColumn"
						},
						{
							"name": "agrAffiliate"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Sales",
						"Sales select(mapColumn(",
						"          Affiliate = Afiliado",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectColumn",
						"SelectColumn aggregate(groupBy(Affiliate),",
						"     countAffiliate = count(Affiliate)) ~> agrAffiliate",
						"agrAffiliate sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Affiliates.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          Affiliate",
						"     ),",
						"     partitionBy('hash', 1)) ~> AffiliateSilver"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsExtSalesHotmartOrigin')]",
				"[concat(variables('factoryId'), '/datasets/dsExtAffiliatesDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtCourses')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extration"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtCodCoursesOrigin",
								"type": "DatasetReference"
							},
							"name": "CodProducts"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtCoursesDestination",
								"type": "DatasetReference"
							},
							"name": "CoursesSilver"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Cod as string,",
						"          {Nome Novo} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CodProducts",
						"CodProducts sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Affiliate as string",
						"     ),",
						"     partitionFileNames:['Courses.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> CoursesSilver"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsExtCodCoursesOrigin')]",
				"[concat(variables('factoryId'), '/datasets/dsExtCoursesDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtMacroRegions')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extration"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtMacroRegionsOrigin",
								"type": "DatasetReference"
							},
							"name": "MacroRegions"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtMacroRegionsDestination",
								"type": "DatasetReference"
							},
							"name": "RegionsSilver"
						}
					],
					"transformations": [
						{
							"name": "dddcitystate"
						},
						{
							"name": "Splitdddcitystate"
						},
						{
							"name": "SplitRegions"
						},
						{
							"name": "FinalSelection"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MacroRegions",
						"MacroRegions derive(dddcitystate = substring(Column_1, 4, 400)) ~> dddcitystate",
						"dddcitystate derive(Splitdddcitystate = split(dddcitystate, '–')) ~> Splitdddcitystate",
						"Splitdddcitystate derive(ddd = trim(Splitdddcitystate[1]),",
						"          city = left(trim(Splitdddcitystate[2]), length(trim(Splitdddcitystate[2]))-1),",
						"          state = trim(Splitdddcitystate[3])) ~> SplitRegions",
						"SplitRegions select(mapColumn(",
						"          ddd,",
						"          city,",
						"          state",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> FinalSelection",
						"FinalSelection sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Affiliate as string",
						"     ),",
						"     partitionFileNames:['Regions.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> RegionsSilver"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsExtMacroRegionsOrigin')]",
				"[concat(variables('factoryId'), '/datasets/dsExtMacroRegionsDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtPaymentType')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extration"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtSalesHotmartOrigin",
								"type": "DatasetReference"
							},
							"name": "Sales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtPaymentTypeDestination",
								"type": "DatasetReference"
							},
							"name": "PaymentTypeSilver"
						}
					],
					"transformations": [
						{
							"name": "agrPaymentType"
						},
						{
							"name": "SelectColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Sales",
						"Sales aggregate(groupBy({Tipo de Pagamento}),",
						"     Count = count({Tipo de Pagamento})) ~> agrPaymentType",
						"agrPaymentType select(mapColumn(",
						"          {Tipo de Pagamento}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectColumn",
						"SelectColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Affiliate as string",
						"     ),",
						"     partitionFileNames:['Paymenttype.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> PaymentTypeSilver"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsExtSalesHotmartOrigin')]",
				"[concat(variables('factoryId'), '/datasets/dsExtPaymentTypeDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtProducer')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extration"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtSalesHotmartOrigin",
								"type": "DatasetReference"
							},
							"name": "Sales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtProducerDestination",
								"type": "DatasetReference"
							},
							"name": "ProducerSilver"
						}
					],
					"transformations": [
						{
							"name": "aggProducer"
						},
						{
							"name": "SelectColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Sales",
						"Sales aggregate(groupBy({Nome do Produtor}),",
						"     Count = count()) ~> aggProducer",
						"aggProducer select(mapColumn(",
						"          {Producer Name} = {Nome do Produtor}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectColumn",
						"SelectColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Producer.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> ProducerSilver"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsExtSalesHotmartOrigin')]",
				"[concat(variables('factoryId'), '/datasets/dsExtProducerDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtSalesHotmart')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extration"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtSalesHotmartOrigin",
								"type": "DatasetReference"
							},
							"name": "SalesHotmart"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtSalesHotmartDestination",
								"type": "DatasetReference"
							},
							"name": "SalesHotmartDestination"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SalesHotmart",
						"SalesHotmart sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Affiliate as string",
						"     ),",
						"     partitionFileNames:['Sales.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> SalesHotmartDestination"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsExtSalesHotmartOrigin')]",
				"[concat(variables('factoryId'), '/datasets/dsExtSalesHotmartDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfExtStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1 - Extration"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtSalesHotmartOrigin",
								"type": "DatasetReference"
							},
							"name": "Sales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsExtStatusDestination",
								"type": "DatasetReference"
							},
							"name": "StatusSilver"
						}
					],
					"transformations": [
						{
							"name": "aggStatus"
						},
						{
							"name": "SelectColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Produto as string,",
						"          Afiliado as string,",
						"          {Nome do Produtor} as string,",
						"          {Documento do Produtor} as string,",
						"          {Meio de Pagamento} as string,",
						"          {Preço do Produto} as string,",
						"          {Preço da Oferta} as string,",
						"          {Tipo de Pagamento} as string,",
						"          {Tipo pagamento oferta} as string,",
						"          Moeda as string,",
						"          {Número da Parcela} as string,",
						"          {Recorrência} as string,",
						"          {Data de Venda} as string,",
						"          {Data de Confirmação} as string,",
						"          Status as string,",
						"          DDD as string,",
						"          Cidade as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Sales",
						"Sales aggregate(groupBy(Status),",
						"     Count = count()) ~> aggStatus",
						"aggStatus select(mapColumn(",
						"          Status",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectColumn",
						"SelectColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Affiliate as string",
						"     ),",
						"     partitionFileNames:['Status.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> StatusSilver"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsExtSalesHotmartOrigin')]",
				"[concat(variables('factoryId'), '/datasets/dsExtStatusDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfsrcAffiliates')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2 - Stage"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtAffiliatesDestination",
								"type": "DatasetReference"
							},
							"name": "DLSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tblsrcAffiliates",
								"type": "DatasetReference"
							},
							"name": "srcDestination"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Affiliate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> DLSilver",
						"DLSilver sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          Nome as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Nome = Affiliate",
						"     )) ~> srcDestination"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsExtAffiliatesDestination')]",
				"[concat(variables('factoryId'), '/datasets/tblsrcAffiliates')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfsrcCourses')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2 - Stage"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsExtCoursesDestination",
								"type": "DatasetReference"
							},
							"name": "DLSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tblsrcCourses",
								"type": "DatasetReference"
							},
							"name": "srcDestination"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Cod as string,",
						"          {Nome Novo} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DLSilver",
						"DLSilver sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as integer,",
						"          BK as string,",
						"          Nome as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          BK = Cod,",
						"          Nome = {Nome Novo}",
						"     )) ~> srcDestination"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsExtCoursesDestination')]",
				"[concat(variables('factoryId'), '/datasets/tblsrcCourses')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pplsrcCourses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfsrcCourses",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfsrcCourses",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DLSilver": {},
									"srcDestination": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "2 - Stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfsrcCourses')]"
			]
		}
	]
}